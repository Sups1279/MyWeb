#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nhom4_LTWeb.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ComputerMuda")]
	public partial class DbMyWebDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertWISHLIST(WISHLIST instance);
    partial void UpdateWISHLIST(WISHLIST instance);
    partial void DeleteWISHLIST(WISHLIST instance);
    partial void InsertBANNERSALE(BANNERSALE instance);
    partial void UpdateBANNERSALE(BANNERSALE instance);
    partial void DeleteBANNERSALE(BANNERSALE instance);
    partial void InsertHANG(HANG instance);
    partial void UpdateHANG(HANG instance);
    partial void DeleteHANG(HANG instance);
    partial void InsertHANG_LOAISP(HANG_LOAISP instance);
    partial void UpdateHANG_LOAISP(HANG_LOAISP instance);
    partial void DeleteHANG_LOAISP(HANG_LOAISP instance);
    partial void InsertHINH(HINH instance);
    partial void UpdateHINH(HINH instance);
    partial void DeleteHINH(HINH instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAISP(LOAISP instance);
    partial void UpdateLOAISP(LOAISP instance);
    partial void DeleteLOAISP(LOAISP instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertTHE(THE instance);
    partial void UpdateTHE(THE instance);
    partial void DeleteTHE(THE instance);
    partial void InsertTHE_CHITIET(THE_CHITIET instance);
    partial void UpdateTHE_CHITIET(THE_CHITIET instance);
    partial void DeleteTHE_CHITIET(THE_CHITIET instance);
    partial void InsertBINH_LUAN(BINH_LUAN instance);
    partial void UpdateBINH_LUAN(BINH_LUAN instance);
    partial void DeleteBINH_LUAN(BINH_LUAN instance);
    partial void InsertDONHANG(DONHANG instance);
    partial void UpdateDONHANG(DONHANG instance);
    partial void DeleteDONHANG(DONHANG instance);
    partial void InsertCHITIETDATHANG(CHITIETDATHANG instance);
    partial void UpdateCHITIETDATHANG(CHITIETDATHANG instance);
    partial void DeleteCHITIETDATHANG(CHITIETDATHANG instance);
        #endregion
        public DbMyWebDataContext() :
                base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ComputerMudaConnectionString2"].ConnectionString, mappingSource)
        {
            OnCreated();
        }

        public DbMyWebDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbMyWebDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbMyWebDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbMyWebDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<WISHLIST> WISHLISTs
		{
			get
			{
				return this.GetTable<WISHLIST>();
			}
		}
		
		public System.Data.Linq.Table<BANNERSALE> BANNERSALEs
		{
			get
			{
				return this.GetTable<BANNERSALE>();
			}
		}
		
		public System.Data.Linq.Table<CHITIET_SP> CHITIET_SPs
		{
			get
			{
				return this.GetTable<CHITIET_SP>();
			}
		}
		
		public System.Data.Linq.Table<HANG> HANGs
		{
			get
			{
				return this.GetTable<HANG>();
			}
		}
		
		public System.Data.Linq.Table<HANG_LOAISP> HANG_LOAISPs
		{
			get
			{
				return this.GetTable<HANG_LOAISP>();
			}
		}
		
		public System.Data.Linq.Table<HINH> HINHs
		{
			get
			{
				return this.GetTable<HINH>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LINH_KIEN> LINH_KIENs
		{
			get
			{
				return this.GetTable<LINH_KIEN>();
			}
		}
		
		public System.Data.Linq.Table<LOAISP> LOAISPs
		{
			get
			{
				return this.GetTable<LOAISP>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<THE> THEs
		{
			get
			{
				return this.GetTable<THE>();
			}
		}
		
		public System.Data.Linq.Table<THE_CHITIET> THE_CHITIETs
		{
			get
			{
				return this.GetTable<THE_CHITIET>();
			}
		}
		
		public System.Data.Linq.Table<BINH_LUAN> BINH_LUANs
		{
			get
			{
				return this.GetTable<BINH_LUAN>();
			}
		}
		
		public System.Data.Linq.Table<DONHANG> DONHANGs
		{
			get
			{
				return this.GetTable<DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETDATHANG> CHITIETDATHANGs
		{
			get
			{
				return this.GetTable<CHITIETDATHANG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaAD;
		
		private string _HoTen;
		
		private string _SoDT;
		
		private string _Email;
		
		private string _UserName;
		
		private string _Psw;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private System.Nullable<int> _Quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaADChanging(int value);
    partial void OnMaADChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnSoDTChanging(string value);
    partial void OnSoDTChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPswChanging(string value);
    partial void OnPswChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnQuyenChanging(System.Nullable<int> value);
    partial void OnQuyenChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaAD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaAD
		{
			get
			{
				return this._MaAD;
			}
			set
			{
				if ((this._MaAD != value))
				{
					this.OnMaADChanging(value);
					this.SendPropertyChanging();
					this._MaAD = value;
					this.SendPropertyChanged("MaAD");
					this.OnMaADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDT", DbType="NChar(10)")]
		public string SoDT
		{
			get
			{
				return this._SoDT;
			}
			set
			{
				if ((this._SoDT != value))
				{
					this.OnSoDTChanging(value);
					this.SendPropertyChanging();
					this._SoDT = value;
					this.SendPropertyChanged("SoDT");
					this.OnSoDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psw", DbType="NChar(30)")]
		public string Psw
		{
			get
			{
				return this._Psw;
			}
			set
			{
				if ((this._Psw != value))
				{
					this.OnPswChanging(value);
					this.SendPropertyChanging();
					this._Psw = value;
					this.SendPropertyChanged("Psw");
					this.OnPswChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="Date")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="Int")]
		public System.Nullable<int> Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WISHLIST")]
	public partial class WISHLIST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDS;
		
		private System.Nullable<int> _MaTK;
		
		private System.Nullable<int> _MaSP;
		
		private System.Nullable<System.DateTime> _NgayThemDS;
		
		private System.Nullable<System.DateTime> _NgayThemSP;
		
		private System.Nullable<double> _GiaSP;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _MaLW;
		
		private int _MaWL;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDSChanging(string value);
    partial void OnTenDSChanged();
    partial void OnMaTKChanging(System.Nullable<int> value);
    partial void OnMaTKChanged();
    partial void OnMaSPChanging(System.Nullable<int> value);
    partial void OnMaSPChanged();
    partial void OnNgayThemDSChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThemDSChanged();
    partial void OnNgayThemSPChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThemSPChanged();
    partial void OnGiaSPChanging(System.Nullable<double> value);
    partial void OnGiaSPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnMaLWChanging(System.Nullable<int> value);
    partial void OnMaLWChanged();
    partial void OnMaWLChanging(int value);
    partial void OnMaWLChanged();
    #endregion
		
		public WISHLIST()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDS", DbType="NVarChar(50)")]
		public string TenDS
		{
			get
			{
				return this._TenDS;
			}
			set
			{
				if ((this._TenDS != value))
				{
					this.OnTenDSChanging(value);
					this.SendPropertyChanging();
					this._TenDS = value;
					this.SendPropertyChanged("TenDS");
					this.OnTenDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="Int")]
		public System.Nullable<int> MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int")]
		public System.Nullable<int> MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThemDS", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThemDS
		{
			get
			{
				return this._NgayThemDS;
			}
			set
			{
				if ((this._NgayThemDS != value))
				{
					this.OnNgayThemDSChanging(value);
					this.SendPropertyChanging();
					this._NgayThemDS = value;
					this.SendPropertyChanged("NgayThemDS");
					this.OnNgayThemDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThemSP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThemSP
		{
			get
			{
				return this._NgayThemSP;
			}
			set
			{
				if ((this._NgayThemSP != value))
				{
					this.OnNgayThemSPChanging(value);
					this.SendPropertyChanging();
					this._NgayThemSP = value;
					this.SendPropertyChanged("NgayThemSP");
					this.OnNgayThemSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaSP", DbType="Float")]
		public System.Nullable<double> GiaSP
		{
			get
			{
				return this._GiaSP;
			}
			set
			{
				if ((this._GiaSP != value))
				{
					this.OnGiaSPChanging(value);
					this.SendPropertyChanging();
					this._GiaSP = value;
					this.SendPropertyChanged("GiaSP");
					this.OnGiaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLW", DbType="Int")]
		public System.Nullable<int> MaLW
		{
			get
			{
				return this._MaLW;
			}
			set
			{
				if ((this._MaLW != value))
				{
					this.OnMaLWChanging(value);
					this.SendPropertyChanging();
					this._MaLW = value;
					this.SendPropertyChanged("MaLW");
					this.OnMaLWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaWL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaWL
		{
			get
			{
				return this._MaWL;
			}
			set
			{
				if ((this._MaWL != value))
				{
					this.OnMaWLChanging(value);
					this.SendPropertyChanging();
					this._MaWL = value;
					this.SendPropertyChanged("MaWL");
					this.OnMaWLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_WISHLIST", Storage="_KHACHHANG", ThisKey="MaTK", OtherKey="MaTK", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.WISHLISTs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.WISHLISTs.Add(this);
						this._MaTK = value.MaTK;
					}
					else
					{
						this._MaTK = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_WISHLIST", Storage="_SANPHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.WISHLISTs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.WISHLISTs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BANNERSALES")]
	public partial class BANNERSALE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBanner;
		
		private string _Banner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBannerChanging(int value);
    partial void OnMaBannerChanged();
    partial void OnBannerChanging(string value);
    partial void OnBannerChanged();
    #endregion
		
		public BANNERSALE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBanner", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBanner
		{
			get
			{
				return this._MaBanner;
			}
			set
			{
				if ((this._MaBanner != value))
				{
					this.OnMaBannerChanging(value);
					this.SendPropertyChanging();
					this._MaBanner = value;
					this.SendPropertyChanged("MaBanner");
					this.OnMaBannerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Banner", DbType="NChar(10)")]
		public string Banner
		{
			get
			{
				return this._Banner;
			}
			set
			{
				if ((this._Banner != value))
				{
					this.OnBannerChanging(value);
					this.SendPropertyChanging();
					this._Banner = value;
					this.SendPropertyChanged("Banner");
					this.OnBannerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIET_SP")]
	public partial class CHITIET_SP
	{
		
		private int _MaSP;
		
		private int _MaTH;
		
		private System.Nullable<int> _MaThongSo;
		
		public CHITIET_SP()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int NOT NULL")]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this._MaSP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTH", DbType="Int NOT NULL")]
		public int MaTH
		{
			get
			{
				return this._MaTH;
			}
			set
			{
				if ((this._MaTH != value))
				{
					this._MaTH = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThongSo", DbType="Int")]
		public System.Nullable<int> MaThongSo
		{
			get
			{
				return this._MaThongSo;
			}
			set
			{
				if ((this._MaThongSo != value))
				{
					this._MaThongSo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANG")]
	public partial class HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHang;
		
		private string _TenHang;
		
		private EntitySet<HANG_LOAISP> _HANG_LOAISPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHangChanging(int value);
    partial void OnMaHangChanged();
    partial void OnTenHangChanging(string value);
    partial void OnTenHangChanged();
    #endregion
		
		public HANG()
		{
			this._HANG_LOAISPs = new EntitySet<HANG_LOAISP>(new Action<HANG_LOAISP>(this.attach_HANG_LOAISPs), new Action<HANG_LOAISP>(this.detach_HANG_LOAISPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHang", DbType="NChar(50)")]
		public string TenHang
		{
			get
			{
				return this._TenHang;
			}
			set
			{
				if ((this._TenHang != value))
				{
					this.OnTenHangChanging(value);
					this.SendPropertyChanging();
					this._TenHang = value;
					this.SendPropertyChanged("TenHang");
					this.OnTenHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_HANG_LOAISP", Storage="_HANG_LOAISPs", ThisKey="MaHang", OtherKey="MaHang")]
		public EntitySet<HANG_LOAISP> HANG_LOAISPs
		{
			get
			{
				return this._HANG_LOAISPs;
			}
			set
			{
				this._HANG_LOAISPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HANG_LOAISPs(HANG_LOAISP entity)
		{
			this.SendPropertyChanging();
			entity.HANG = this;
		}
		
		private void detach_HANG_LOAISPs(HANG_LOAISP entity)
		{
			this.SendPropertyChanging();
			entity.HANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANG_LOAISP")]
	public partial class HANG_LOAISP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHang;
		
		private int _MaLSP;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
		private EntityRef<HANG> _HANG;
		
		private EntityRef<LOAISP> _LOAISP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHangChanging(int value);
    partial void OnMaHangChanged();
    partial void OnMaLSPChanging(int value);
    partial void OnMaLSPChanged();
    #endregion
		
		public HANG_LOAISP()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			this._HANG = default(EntityRef<HANG>);
			this._LOAISP = default(EntityRef<LOAISP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					if (this._HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLSP
		{
			get
			{
				return this._MaLSP;
			}
			set
			{
				if ((this._MaLSP != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLSPChanging(value);
					this.SendPropertyChanging();
					this._MaLSP = value;
					this.SendPropertyChanged("MaLSP");
					this.OnMaLSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_LOAISP_SANPHAM", Storage="_SANPHAMs", ThisKey="MaHang,MaLSP", OtherKey="MaHang,MaLSP")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_HANG_LOAISP", Storage="_HANG", ThisKey="MaHang", OtherKey="MaHang", IsForeignKey=true)]
		public HANG HANG
		{
			get
			{
				return this._HANG.Entity;
			}
			set
			{
				HANG previousValue = this._HANG.Entity;
				if (((previousValue != value) 
							|| (this._HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANG.Entity = null;
						previousValue.HANG_LOAISPs.Remove(this);
					}
					this._HANG.Entity = value;
					if ((value != null))
					{
						value.HANG_LOAISPs.Add(this);
						this._MaHang = value.MaHang;
					}
					else
					{
						this._MaHang = default(int);
					}
					this.SendPropertyChanged("HANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_HANG_LOAISP", Storage="_LOAISP", ThisKey="MaLSP", OtherKey="MaLSP", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.HANG_LOAISPs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.HANG_LOAISPs.Add(this);
						this._MaLSP = value.MaLSP;
					}
					else
					{
						this._MaLSP = default(int);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HANG_LOAISP = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HANG_LOAISP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HINH")]
	public partial class HINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHinh;
		
		private int _MaSP;
		
		private string _HinhSP;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHinhChanging(int value);
    partial void OnMaHinhChanged();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnHinhSPChanging(string value);
    partial void OnHinhSPChanged();
    #endregion
		
		public HINH()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHinh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHinh
		{
			get
			{
				return this._MaHinh;
			}
			set
			{
				if ((this._MaHinh != value))
				{
					this.OnMaHinhChanging(value);
					this.SendPropertyChanging();
					this._MaHinh = value;
					this.SendPropertyChanged("MaHinh");
					this.OnMaHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int NOT NULL")]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhSP", DbType="NChar(20)")]
		public string HinhSP
		{
			get
			{
				return this._HinhSP;
			}
			set
			{
				if ((this._HinhSP != value))
				{
					this.OnHinhSPChanging(value);
					this.SendPropertyChanging();
					this._HinhSP = value;
					this.SendPropertyChanged("HinhSP");
					this.OnHinhSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_HINH", Storage="_SANPHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.HINHs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.HINHs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTK;
		
		private string _SDT;
		
		private string _Email;
		
		private string _UserName;
		
		private string _Psw;
		
		private System.Nullable<System.DateTime> _NgayDK;
		
		private string _HoTen;
		
		private EntitySet<WISHLIST> _WISHLISTs;
		
		private EntitySet<BINH_LUAN> _BINH_LUANs;
		
		private EntitySet<DONHANG> _DONHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTKChanging(int value);
    partial void OnMaTKChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPswChanging(string value);
    partial void OnPswChanged();
    partial void OnNgayDKChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDKChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._WISHLISTs = new EntitySet<WISHLIST>(new Action<WISHLIST>(this.attach_WISHLISTs), new Action<WISHLIST>(this.detach_WISHLISTs));
			this._BINH_LUANs = new EntitySet<BINH_LUAN>(new Action<BINH_LUAN>(this.attach_BINH_LUANs), new Action<BINH_LUAN>(this.detach_BINH_LUANs));
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psw", DbType="NChar(30)")]
		public string Psw
		{
			get
			{
				return this._Psw;
			}
			set
			{
				if ((this._Psw != value))
				{
					this.OnPswChanging(value);
					this.SendPropertyChanging();
					this._Psw = value;
					this.SendPropertyChanged("Psw");
					this.OnPswChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDK", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDK
		{
			get
			{
				return this._NgayDK;
			}
			set
			{
				if ((this._NgayDK != value))
				{
					this.OnNgayDKChanging(value);
					this.SendPropertyChanging();
					this._NgayDK = value;
					this.SendPropertyChanged("NgayDK");
					this.OnNgayDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_WISHLIST", Storage="_WISHLISTs", ThisKey="MaTK", OtherKey="MaTK")]
		public EntitySet<WISHLIST> WISHLISTs
		{
			get
			{
				return this._WISHLISTs;
			}
			set
			{
				this._WISHLISTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_BINH_LUAN", Storage="_BINH_LUANs", ThisKey="MaTK", OtherKey="MaTK")]
		public EntitySet<BINH_LUAN> BINH_LUANs
		{
			get
			{
				return this._BINH_LUANs;
			}
			set
			{
				this._BINH_LUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_DONHANGs", ThisKey="MaTK", OtherKey="MaTK")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WISHLISTs(WISHLIST entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_WISHLISTs(WISHLIST entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_BINH_LUANs(BINH_LUAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_BINH_LUANs(BINH_LUAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LINH_KIEN")]
	public partial class LINH_KIEN
	{
		
		private System.Nullable<int> _MaLK;
		
		private System.Nullable<int> _MaSP;
		
		public LINH_KIEN()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLK", DbType="Int")]
		public System.Nullable<int> MaLK
		{
			get
			{
				return this._MaLK;
			}
			set
			{
				if ((this._MaLK != value))
				{
					this._MaLK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int")]
		public System.Nullable<int> MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this._MaSP = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISP")]
	public partial class LOAISP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLSP;
		
		private string _TenLoaiSP;
		
		private EntitySet<HANG_LOAISP> _HANG_LOAISPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLSPChanging(int value);
    partial void OnMaLSPChanged();
    partial void OnTenLoaiSPChanging(string value);
    partial void OnTenLoaiSPChanged();
    #endregion
		
		public LOAISP()
		{
			this._HANG_LOAISPs = new EntitySet<HANG_LOAISP>(new Action<HANG_LOAISP>(this.attach_HANG_LOAISPs), new Action<HANG_LOAISP>(this.detach_HANG_LOAISPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLSP
		{
			get
			{
				return this._MaLSP;
			}
			set
			{
				if ((this._MaLSP != value))
				{
					this.OnMaLSPChanging(value);
					this.SendPropertyChanging();
					this._MaLSP = value;
					this.SendPropertyChanged("MaLSP");
					this.OnMaLSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSP", DbType="NChar(10)")]
		public string TenLoaiSP
		{
			get
			{
				return this._TenLoaiSP;
			}
			set
			{
				if ((this._TenLoaiSP != value))
				{
					this.OnTenLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSP = value;
					this.SendPropertyChanged("TenLoaiSP");
					this.OnTenLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_HANG_LOAISP", Storage="_HANG_LOAISPs", ThisKey="MaLSP", OtherKey="MaLSP")]
		public EntitySet<HANG_LOAISP> HANG_LOAISPs
		{
			get
			{
				return this._HANG_LOAISPs;
			}
			set
			{
				this._HANG_LOAISPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HANG_LOAISPs(HANG_LOAISP entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_HANG_LOAISPs(HANG_LOAISP entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSP;
		
		private string _TenSP;
		
		private System.Nullable<double> _GiaSP;
		
		private string _MoTa;
		
		private string _HinhAnh;
		
		private System.Nullable<int> _DiemDanhGia;
		
		private System.Nullable<int> _MaHang;
		
		private System.Nullable<int> _MaLSP;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _MaLK;
		
		private EntitySet<WISHLIST> _WISHLISTs;
		
		private EntitySet<HINH> _HINHs;
		
		private EntitySet<BINH_LUAN> _BINH_LUANs;
		
		private EntitySet<CHITIETDATHANG> _CHITIETDATHANGs;
		
		private EntityRef<HANG_LOAISP> _HANG_LOAISP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnGiaSPChanging(System.Nullable<double> value);
    partial void OnGiaSPChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnDiemDanhGiaChanging(System.Nullable<int> value);
    partial void OnDiemDanhGiaChanged();
    partial void OnMaHangChanging(System.Nullable<int> value);
    partial void OnMaHangChanged();
    partial void OnMaLSPChanging(System.Nullable<int> value);
    partial void OnMaLSPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnMaLKChanging(System.Nullable<int> value);
    partial void OnMaLKChanged();
    #endregion
		
		public SANPHAM()
		{
			this._WISHLISTs = new EntitySet<WISHLIST>(new Action<WISHLIST>(this.attach_WISHLISTs), new Action<WISHLIST>(this.detach_WISHLISTs));
			this._HINHs = new EntitySet<HINH>(new Action<HINH>(this.attach_HINHs), new Action<HINH>(this.detach_HINHs));
			this._BINH_LUANs = new EntitySet<BINH_LUAN>(new Action<BINH_LUAN>(this.attach_BINH_LUANs), new Action<BINH_LUAN>(this.detach_BINH_LUANs));
			this._CHITIETDATHANGs = new EntitySet<CHITIETDATHANG>(new Action<CHITIETDATHANG>(this.attach_CHITIETDATHANGs), new Action<CHITIETDATHANG>(this.detach_CHITIETDATHANGs));
			this._HANG_LOAISP = default(EntityRef<HANG_LOAISP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(50)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaSP", DbType="Float")]
		public System.Nullable<double> GiaSP
		{
			get
			{
				return this._GiaSP;
			}
			set
			{
				if ((this._GiaSP != value))
				{
					this.OnGiaSPChanging(value);
					this.SendPropertyChanging();
					this._GiaSP = value;
					this.SendPropertyChanged("GiaSP");
					this.OnGiaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(230)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="VarChar(50)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemDanhGia", DbType="Int")]
		public System.Nullable<int> DiemDanhGia
		{
			get
			{
				return this._DiemDanhGia;
			}
			set
			{
				if ((this._DiemDanhGia != value))
				{
					this.OnDiemDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._DiemDanhGia = value;
					this.SendPropertyChanged("DiemDanhGia");
					this.OnDiemDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="Int")]
		public System.Nullable<int> MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					if (this._HANG_LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLSP", DbType="Int")]
		public System.Nullable<int> MaLSP
		{
			get
			{
				return this._MaLSP;
			}
			set
			{
				if ((this._MaLSP != value))
				{
					if (this._HANG_LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLSPChanging(value);
					this.SendPropertyChanging();
					this._MaLSP = value;
					this.SendPropertyChanged("MaLSP");
					this.OnMaLSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLK", DbType="Int")]
		public System.Nullable<int> MaLK
		{
			get
			{
				return this._MaLK;
			}
			set
			{
				if ((this._MaLK != value))
				{
					this.OnMaLKChanging(value);
					this.SendPropertyChanging();
					this._MaLK = value;
					this.SendPropertyChanged("MaLK");
					this.OnMaLKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_WISHLIST", Storage="_WISHLISTs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<WISHLIST> WISHLISTs
		{
			get
			{
				return this._WISHLISTs;
			}
			set
			{
				this._WISHLISTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_HINH", Storage="_HINHs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<HINH> HINHs
		{
			get
			{
				return this._HINHs;
			}
			set
			{
				this._HINHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_BINH_LUAN", Storage="_BINH_LUANs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<BINH_LUAN> BINH_LUANs
		{
			get
			{
				return this._BINH_LUANs;
			}
			set
			{
				this._BINH_LUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETDATHANG", Storage="_CHITIETDATHANGs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CHITIETDATHANG> CHITIETDATHANGs
		{
			get
			{
				return this._CHITIETDATHANGs;
			}
			set
			{
				this._CHITIETDATHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_LOAISP_SANPHAM", Storage="_HANG_LOAISP", ThisKey="MaHang,MaLSP", OtherKey="MaHang,MaLSP", IsForeignKey=true)]
		public HANG_LOAISP HANG_LOAISP
		{
			get
			{
				return this._HANG_LOAISP.Entity;
			}
			set
			{
				HANG_LOAISP previousValue = this._HANG_LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._HANG_LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANG_LOAISP.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._HANG_LOAISP.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MaHang = value.MaHang;
						this._MaLSP = value.MaLSP;
					}
					else
					{
						this._MaHang = default(Nullable<int>);
						this._MaLSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("HANG_LOAISP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WISHLISTs(WISHLIST entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_WISHLISTs(WISHLIST entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_HINHs(HINH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_HINHs(HINH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_BINH_LUANs(BINH_LUAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_BINH_LUANs(BINH_LUAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETDATHANGs(CHITIETDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETDATHANGs(CHITIETDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THE")]
	public partial class THE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTH;
		
		private string _TenThe;
		
		private EntitySet<THE_CHITIET> _THE_CHITIETs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTHChanging(int value);
    partial void OnMaTHChanged();
    partial void OnTenTheChanging(string value);
    partial void OnTenTheChanged();
    #endregion
		
		public THE()
		{
			this._THE_CHITIETs = new EntitySet<THE_CHITIET>(new Action<THE_CHITIET>(this.attach_THE_CHITIETs), new Action<THE_CHITIET>(this.detach_THE_CHITIETs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTH
		{
			get
			{
				return this._MaTH;
			}
			set
			{
				if ((this._MaTH != value))
				{
					this.OnMaTHChanging(value);
					this.SendPropertyChanging();
					this._MaTH = value;
					this.SendPropertyChanged("MaTH");
					this.OnMaTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThe", DbType="NVarChar(50)")]
		public string TenThe
		{
			get
			{
				return this._TenThe;
			}
			set
			{
				if ((this._TenThe != value))
				{
					this.OnTenTheChanging(value);
					this.SendPropertyChanging();
					this._TenThe = value;
					this.SendPropertyChanged("TenThe");
					this.OnTenTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THE_THE_CHITIET", Storage="_THE_CHITIETs", ThisKey="MaTH", OtherKey="MaTH")]
		public EntitySet<THE_CHITIET> THE_CHITIETs
		{
			get
			{
				return this._THE_CHITIETs;
			}
			set
			{
				this._THE_CHITIETs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THE_CHITIETs(THE_CHITIET entity)
		{
			this.SendPropertyChanging();
			entity.THE = this;
		}
		
		private void detach_THE_CHITIETs(THE_CHITIET entity)
		{
			this.SendPropertyChanging();
			entity.THE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THE_CHITIET")]
	public partial class THE_CHITIET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTH;
		
		private string _ThongSo;
		
		private int _MaThongSo;
		
		private EntityRef<THE> _THE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTHChanging(int value);
    partial void OnMaTHChanged();
    partial void OnThongSoChanging(string value);
    partial void OnThongSoChanged();
    partial void OnMaThongSoChanging(int value);
    partial void OnMaThongSoChanged();
    #endregion
		
		public THE_CHITIET()
		{
			this._THE = default(EntityRef<THE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTH", DbType="Int NOT NULL")]
		public int MaTH
		{
			get
			{
				return this._MaTH;
			}
			set
			{
				if ((this._MaTH != value))
				{
					if (this._THE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTHChanging(value);
					this.SendPropertyChanging();
					this._MaTH = value;
					this.SendPropertyChanged("MaTH");
					this.OnMaTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThongSo", DbType="NChar(50)")]
		public string ThongSo
		{
			get
			{
				return this._ThongSo;
			}
			set
			{
				if ((this._ThongSo != value))
				{
					this.OnThongSoChanging(value);
					this.SendPropertyChanging();
					this._ThongSo = value;
					this.SendPropertyChanged("ThongSo");
					this.OnThongSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThongSo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThongSo
		{
			get
			{
				return this._MaThongSo;
			}
			set
			{
				if ((this._MaThongSo != value))
				{
					this.OnMaThongSoChanging(value);
					this.SendPropertyChanging();
					this._MaThongSo = value;
					this.SendPropertyChanged("MaThongSo");
					this.OnMaThongSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THE_THE_CHITIET", Storage="_THE", ThisKey="MaTH", OtherKey="MaTH", IsForeignKey=true)]
		public THE THE
		{
			get
			{
				return this._THE.Entity;
			}
			set
			{
				THE previousValue = this._THE.Entity;
				if (((previousValue != value) 
							|| (this._THE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THE.Entity = null;
						previousValue.THE_CHITIETs.Remove(this);
					}
					this._THE.Entity = value;
					if ((value != null))
					{
						value.THE_CHITIETs.Add(this);
						this._MaTH = value.MaTH;
					}
					else
					{
						this._MaTH = default(int);
					}
					this.SendPropertyChanged("THE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BINH_LUAN")]
	public partial class BINH_LUAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BinhLuan;
		
		private System.Nullable<int> _Diem;
		
		private System.Nullable<int> _MaSP;
		
		private System.Nullable<int> _MaTK;
		
		private int _MaBL;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBinhLuanChanging(string value);
    partial void OnBinhLuanChanged();
    partial void OnDiemChanging(System.Nullable<int> value);
    partial void OnDiemChanged();
    partial void OnMaSPChanging(System.Nullable<int> value);
    partial void OnMaSPChanged();
    partial void OnMaTKChanging(System.Nullable<int> value);
    partial void OnMaTKChanged();
    partial void OnMaBLChanging(int value);
    partial void OnMaBLChanged();
    #endregion
		
		public BINH_LUAN()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BinhLuan", DbType="NVarChar(130)")]
		public string BinhLuan
		{
			get
			{
				return this._BinhLuan;
			}
			set
			{
				if ((this._BinhLuan != value))
				{
					this.OnBinhLuanChanging(value);
					this.SendPropertyChanging();
					this._BinhLuan = value;
					this.SendPropertyChanged("BinhLuan");
					this.OnBinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Int")]
		public System.Nullable<int> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int")]
		public System.Nullable<int> MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="Int")]
		public System.Nullable<int> MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBL
		{
			get
			{
				return this._MaBL;
			}
			set
			{
				if ((this._MaBL != value))
				{
					this.OnMaBLChanging(value);
					this.SendPropertyChanging();
					this._MaBL = value;
					this.SendPropertyChanged("MaBL");
					this.OnMaBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_BINH_LUAN", Storage="_KHACHHANG", ThisKey="MaTK", OtherKey="MaTK", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.BINH_LUANs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.BINH_LUANs.Add(this);
						this._MaTK = value.MaTK;
					}
					else
					{
						this._MaTK = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_BINH_LUAN", Storage="_SANPHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.BINH_LUANs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.BINH_LUANs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANG")]
	public partial class DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private string _TenDH;
		
		private System.Nullable<System.DateTime> _NgayGiao;
		
		private System.Nullable<int> _MaTK;
		
		private System.Nullable<System.DateTime> _NgayDat;
		
		private string _TinhTrangDonHang;
		
		private System.Nullable<bool> _DaThanhToan;
		
		private string _DiaChi;
		
		private EntitySet<CHITIETDATHANG> _CHITIETDATHANGs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnTenDHChanging(string value);
    partial void OnTenDHChanged();
    partial void OnNgayGiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoChanged();
    partial void OnMaTKChanging(System.Nullable<int> value);
    partial void OnMaTKChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnTinhTrangDonHangChanging(string value);
    partial void OnTinhTrangDonHangChanged();
    partial void OnDaThanhToanChanging(System.Nullable<bool> value);
    partial void OnDaThanhToanChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public DONHANG()
		{
			this._CHITIETDATHANGs = new EntitySet<CHITIETDATHANG>(new Action<CHITIETDATHANG>(this.attach_CHITIETDATHANGs), new Action<CHITIETDATHANG>(this.detach_CHITIETDATHANGs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDH", DbType="NVarChar(50)")]
		public string TenDH
		{
			get
			{
				return this._TenDH;
			}
			set
			{
				if ((this._TenDH != value))
				{
					this.OnTenDHChanging(value);
					this.SendPropertyChanging();
					this._TenDH = value;
					this.SendPropertyChanged("TenDH");
					this.OnTenDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiao", DbType="Date")]
		public System.Nullable<System.DateTime> NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="Int")]
		public System.Nullable<int> MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangDonHang", DbType="NVarChar(50)")]
		public string TinhTrangDonHang
		{
			get
			{
				return this._TinhTrangDonHang;
			}
			set
			{
				if ((this._TinhTrangDonHang != value))
				{
					this.OnTinhTrangDonHangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangDonHang = value;
					this.SendPropertyChanged("TinhTrangDonHang");
					this.OnTinhTrangDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaThanhToan", DbType="Bit")]
		public System.Nullable<bool> DaThanhToan
		{
			get
			{
				return this._DaThanhToan;
			}
			set
			{
				if ((this._DaThanhToan != value))
				{
					this.OnDaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._DaThanhToan = value;
					this.SendPropertyChanged("DaThanhToan");
					this.OnDaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(250)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDATHANG", Storage="_CHITIETDATHANGs", ThisKey="MaDH", OtherKey="MaDH")]
		public EntitySet<CHITIETDATHANG> CHITIETDATHANGs
		{
			get
			{
				return this._CHITIETDATHANGs;
			}
			set
			{
				this._CHITIETDATHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_KHACHHANG", ThisKey="MaTK", OtherKey="MaTK", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._MaTK = value.MaTK;
					}
					else
					{
						this._MaTK = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDATHANGs(CHITIETDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_CHITIETDATHANGs(CHITIETDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDATHANG")]
	public partial class CHITIETDATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _MaSP;
		
		private System.Nullable<int> _MaDH;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<double> _GiaSP;
		
		private int _MaCTDH;
		
		private EntityRef<DONHANG> _DONHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(System.Nullable<int> value);
    partial void OnMaSPChanged();
    partial void OnMaDHChanging(System.Nullable<int> value);
    partial void OnMaDHChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnGiaSPChanging(System.Nullable<double> value);
    partial void OnGiaSPChanged();
    partial void OnMaCTDHChanging(int value);
    partial void OnMaCTDHChanged();
    #endregion
		
		public CHITIETDATHANG()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int")]
		public System.Nullable<int> MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="Int")]
		public System.Nullable<int> MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaSP", DbType="Float")]
		public System.Nullable<double> GiaSP
		{
			get
			{
				return this._GiaSP;
			}
			set
			{
				if ((this._GiaSP != value))
				{
					this.OnGiaSPChanging(value);
					this.SendPropertyChanging();
					this._GiaSP = value;
					this.SendPropertyChanged("GiaSP");
					this.OnGiaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCTDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCTDH
		{
			get
			{
				return this._MaCTDH;
			}
			set
			{
				if ((this._MaCTDH != value))
				{
					this.OnMaCTDHChanging(value);
					this.SendPropertyChanging();
					this._MaCTDH = value;
					this.SendPropertyChanged("MaCTDH");
					this.OnMaCTDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDATHANG", Storage="_DONHANG", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.CHITIETDATHANGs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDATHANGs.Add(this);
						this._MaDH = value.MaDH;
					}
					else
					{
						this._MaDH = default(Nullable<int>);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETDATHANG", Storage="_SANPHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETDATHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETDATHANGs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
